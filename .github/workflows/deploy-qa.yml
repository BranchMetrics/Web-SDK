name: Deploy QA
on:
  pull_request:
    types: [closed]
    branches:
      - main
    paths-ignore:
      - docs/**
      - README.md
env:
  BRANCH_NAME: '${{ github.event.inputs.branch_name || github.head_ref || github.ref_name  }}'
  NODE_VERSION: 18
  JAVA_VERSION: 11
  JAVA_DISTRIBUTION: 'adopt'

jobs:
  test-unit:
    name: Unit tests
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout ${{ github.ref_name }}
        uses: actions/checkout@v4

      - name: Install Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm run ci

      - name: Run tests
        id: runTests
        run: npm run test

      - name: Run coverage
        id: runCover
        if: steps.runTests.outcome == 'success'
        run: npm run cover

      - name : upload codecov
        uses: codecov/codecov-action@v4
        if: steps.runCover.outcome == 'success'

  test-lint:
    name: Lint
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout ${{ github.ref_name }}
        uses: actions/checkout@v4

      - name: Install Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm run ci

      - name: Lint tests
        run: npm run lint

  deploy-qa:
    name: Deploy-QA
    needs: [test-unit,test-lint]
    if: ${{ github.ref_name == 'main' && github.event.pull_request.merged == true }}
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout ${{ github.ref_name }}
        uses: actions/checkout@v4

      - name: Install Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Install dependencies
        run: npm run ci

      - name: Call the Build bash script for QA
        id: build
        run:  bash ${GITHUB_WORKSPACE}/deployment/deploy-qa.sh



